{
cortexto <- "white"
}
text(x, 7-y, indice, col=cortexto)
# incrementa (proxima cor)
indice <- indice+1
}
}
# friendlydemo.R
# exibe as 46 cores disponíveis em friendlycolor.R
source("friendlycolor.R")
indice <- 1 # primeiro indice
# plota um gráfico vazio
plot(NA, xlim=c(0,9), ylim=c(0,7),
ylab=NA, ylab=NA, axes = FALSE)
for (x in 1:8)
{
for (y in 1:6)
{
# pula se acabaram as cores
if (indice > 46) {next}
points ( x, 7-y,
pch=21, cex=4,
col="black",
bg=friendlycolor(indice)
)
cortexto <- "black"
if (
(indice >= 25 & indice <= 27)
|
(indice >= 31 & indice <= 36)
)
{
cortexto <- "white"
}
text(x, 7-y, indice, col=cortexto)
# incrementa (proxima cor)
indice <- indice+1
}
}
# friendlydemo.R
# exibe as 46 cores disponíveis em friendlycolor.R
source("friendlycolor.R")
indice <- 1 # primeiro indice
# plota um gráfico vazio
plot(NA, xlim=c(0,9), ylim=c(0,7),
ylab=NA, ylab=NA, axes = FALSE)
for (x in 1:8)
{
for (y in 1:6)
{
# pula se acabaram as cores
if (indice > 46) {next}
points ( x, 7-y,
pch=21, cex=4,
col="black",
bg=friendlycolor(indice)
)
cortexto <- "black"
if (
(indice >= 25 & indice <= 27)
|
(indice >= 31 & indice <= 36)
)
{
cortexto <- "white"
}
text(x, 7-y, indice, col=cortexto)
# incrementa (proxima cor)
indice <- indice+1
}
}
# friendlydemo.R
# exibe as 46 cores disponíveis em friendlycolor.R
source("friendlycolor.R")
indice <- 1 # primeiro indice
# plota um gráfico vazio
plot(NA, xlim=c(0,9), ylim=c(0,7),
xlab=NA, ylab=NA, axes = FALSE)
for (x in 1:8)
{
for (y in 1:6)
{
# pula se acabaram as cores
if (indice > 46) {next}
points ( x, 7-y,
pch=21, cex=4,
col="black",
bg=friendlycolor(indice)
)
cortexto <- "black"
if (
(indice >= 25 & indice <= 27)
|
(indice >= 31 & indice <= 36)
)
{
cortexto <- "white"
}
text(x, 7-y, indice, col=cortexto)
# incrementa (proxima cor)
indice <- indice+1
}
}
names(DrgGrv)
DrgGrv$Porcentagem <- round(DrgGrv$Pacientes/sum(DrgGrv$Pacientes)*100,2)
print(DrgGrv)
sum(DrgGrv$Porcentagem)
DrgGrv$Porcentagem > 0
DrgGrv$Porcentagem >= 0 & DrgGrv$Porcentagem <= 1
(DrgGrv$Porcentagem >= 0 & DrgGrv$Porcentagem <= 1)
(DrgGrv$Porcentagem >= 0 & DrgGrv$Porcentagem <= 100)
sum(DrgGrv$Porcentagem >= 0)
source("friendlycolor.R")
plot (DrgGrv,type="h", col=friendlycolor(8), lwd=3)
points(DrgGrv, pch=21, col=friendlycolor(8), bg=friendlycolor(12))
source("friendlycolor.R")
plot (DrgGrv$Drogas, DrgGrv$Porcentagem,
type="h", col=friendlycolor(8), lwd=3)
points(DrgGrv, pch=21, col=friendlycolor(8), bg=friendlycolor(12))
source("friendlycolor.R")
plot (DrgGrv$Drogas, DrgGrv$Porcentagem,
type="h", col=friendlycolor(8), lwd=3)
points(DrgGrv$Drogas, DrgGrv$Porcentagem,
pch=21,
col=friendlycolor(8), bg=friendlycolor(12))
source("friendlycolor.R")
plot (DrgGrv$Drogas, DrgGrv$Porcentagem,
type="h", col=friendlycolor(20), lwd=3)
points(DrgGrv$Drogas, DrgGrv$Porcentagem,
pch=21,
col=friendlycolor(20), bg=friendlycolor(12))
source("friendlycolor.R")
plot (DrgGrv$Drogas, DrgGrv$Porcentagem,
type="h", col=friendlycolor(20), lwd=3)
points(DrgGrv$Drogas, DrgGrv$Porcentagem,
pch=21,
col=friendlycolor(20), bg=friendlycolor(23))
plot (DrgGrv,type="h", col="#994F88", lwd=3)
points(DrgGrv, pch=21, col="#994F88", bg="#994F88")
plot (DrgGrv,type="h", col="#994F88", lwd=3)
points(DrgGrv, pch=21, col="#994F88", bg="#994F88")
source("friendlycolor.R")
plot (DrgGrv$Drogas, DrgGrv$Porcentagem,
type="h", col=friendlycolor(20), lwd=3)
points(DrgGrv$Drogas, DrgGrv$Porcentagem,
pch=21,
col=friendlycolor(20), bg=friendlycolor(23))
source("friendlycolor.R")
plot (DrgGrv$Drogas, DrgGrv$Porcentagem,
type="h", col=friendlycolor(20), lwd=3,
xlab="Número de drogas",
ylab="Porcentagem de gestantes")
points(DrgGrv$Drogas, DrgGrv$Porcentagem,
pch=21,
col=friendlycolor(20), bg=friendlycolor(23))
names(DrgGrv)
densidade <- density(DrgGrv$Pacientes)
source("friendlycolor.R")
plot (densidade,
col=friendlycolor(20), lwd=3,
xlab="Número de drogas utilizadas",
ylab="Porcentagem de gestantes")
points(DrgGrv$Drogas, DrgGrv$Porcentagem,
pch=21,
col=friendlycolor(20), bg=friendlycolor(23))
?rep
# desdobra a quantidade de pacientes
populacao <- c() # cria um vetor vazio
for (r in 1:nrow(DrgGrv))
{
# acumula no vetor o número de drogas
populacao <- c(populacao, rep(DrgGrv$Drogas, times=DrgGrv$Pacientes))
}
# usa a funcao R que transforma em densidade de probabilidade
densidade <- density(populacao)
source("friendlycolor.R")
plot (densidade,
col=friendlycolor(20), lwd=3,
xlab="Número de drogas utilizadas",
ylab="Porcentagem de gestantes")
points(DrgGrv$Drogas, DrgGrv$Porcentagem,
pch=21,
col=friendlycolor(20), bg=friendlycolor(23))
source("friendlycolor.R")
plot (densidade,
col=friendlycolor(20), lwd=3,
xlab="Número de drogas utilizadas",
ylab="Porcentagem de gestantes")
source("friendlycolor.R")
plot (DrgGrv$Drogas, DrgGrv$Porcentagem,
type="h", col=friendlycolor(20), lwd=3,
xlab="Número de drogas utilizadas",
ylab="Porcentagem de gestantes")
points(DrgGrv$Drogas, DrgGrv$Porcentagem,
pch=21,
col=friendlycolor(20), bg=friendlycolor(23))
source("friendlycolor.R")
# le os dados
DrgGrv <- read.table("Drogas_Gravidez.txt", header=TRUE, sep="\t")
# cria coluna para a porcentagem
DrgGrv$Porcentagem <- round(DrgGrv$Pacientes/sum(DrgGrv$Pacientes)*100,2)
# exibe o grafico no estilo 'histograma'
# (variavel quantitativa discreta)
plot (DrgGrv$Drogas, DrgGrv$Porcentagem,
type="h", col=friendlycolor(20), lwd=3,
xlab="Número de drogas utilizadas",
ylab="Porcentagem de gestantes")
points(DrgGrv$Drogas, DrgGrv$Porcentagem,
pch=21,
col=friendlycolor(20), bg=friendlycolor(23))
# tratando a variavel como quantitativa continua
# (apenas por exemplo; nao eh apropriado fazer isto)
# cria uma populacao com as quantidades
# de drogas utilizadas pelas pacientes
populacao <- c() # cria um vetor vazio
for (r in 1:nrow(DrgGrv))
{
# acumula no vetor o número de drogas
populacao <- c(populacao, rep(DrgGrv$Drogas, times=DrgGrv$Pacientes))
}
# usa a funcao R que transforma em densidade de probabilidade
densidade <- density(populacao)
# exibe o grafico no estilo 'density plot'
plot (densidade,
main = "Distribuição do uso de\ndrogas em gestantes",
col=friendlycolor(20), lwd=3,
xlab="Número de drogas utilizadas",
ylab="Porcentagem de gestantes")
source("friendlycolor.R")
# le os dados
DrgGrv <- read.table("Drogas_Gravidez.txt", header=TRUE, sep="\t")
# cria coluna para a porcentagem
DrgGrv$Porcentagem <- round(DrgGrv$Pacientes/sum(DrgGrv$Pacientes)*100,2)
# exibe o grafico no estilo 'histograma'
# (variavel quantitativa discreta)
plot (DrgGrv$Drogas, DrgGrv$Porcentagem,
main = "Distribuição do uso de\ndrogas em gestantes",
type="h", col=friendlycolor(20), lwd=3,
xlab="Número de drogas utilizadas",
ylab="Porcentagem de gestantes")
points(DrgGrv$Drogas, DrgGrv$Porcentagem,
pch=21,
col=friendlycolor(20), bg=friendlycolor(23))
# tratando a variavel como quantitativa continua
# (apenas por exemplo; nao eh apropriado fazer isto)
# cria uma populacao com as quantidades
# de drogas utilizadas pelas pacientes
populacao <- c() # cria um vetor vazio
for (r in 1:nrow(DrgGrv))
{
# acumula no vetor o número de drogas
populacao <- c(populacao, rep(DrgGrv$Drogas, times=DrgGrv$Pacientes))
}
# usa a funcao R que transforma em densidade de probabilidade
densidade <- density(populacao)
# exibe o grafico no estilo 'density plot'
plot (densidade,
main = "Distribuição do uso de\ndrogas em gestantes",
col=friendlycolor(20), lwd=3,
xlab="Número de drogas utilizadas",
ylab="Porcentagem de gestantes")
knitr::opts_chunk$set(echo = TRUE)
dev.new(width=5, height=4, unit="px")
plot (NA)
dev.new(width=5, height=4, unit="px")
plot (NA)
dev.new(width=5, height=4, unit="px")
plot (NA,xlim=c(0,10),ylim=c(0,5))
dev.new(width=5, height=4, unit="in")
plot (NA,xlim=c(0,10),ylim=c(0,5))
dev.new(width=5, height=4, unit="in")
plot (NA,xlim=c(0,10),ylim=c(0,5))
plot (NA,xlim=c(0,10),ylim=c(0,5))
dev.off()
dev.off()
plot (NA,xlim=c(0,10),ylim=c(0,5))
<table><tr><td></td><td></td></tr></table>
<table/><tr/><td/></td/><td/></td/></tr/></table/>
tabl <- "  # simple table creation here
| Tables        | Are           | Cool  |
|---------------|:-------------:|------:|
| col 3 is      | right-aligned | $1600 |
| col 2 is      | centered      |   $12 |
| zebra stripes | are neat      |    $1 |
"
cat(tabl) # output the table in a format good for HTML/PDF/docx conversion
knitr::opts_chunk$set(echo = TRUE)
barplot(1:4)
barplot(4:7)
barplot(1:4)
par(mfrow=c(1,2))
barplot(1:4)
barplot(4:7)
par(mfrow=c(1,2))
barplot(1:4)
barplot(4:7)
par(mfrow=c(1,2))
barplot(1:4)
barplot(4:7)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
barplot(1:4)
barplot(4:7)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
plot(NA,NA,xlim=c(0,10),ylim=c(0,10))
rasterImage("moeda_1jogada.png",2,2,4,4)
par(mfrow=c(1,2))
plot(NA,NA,xlim=c(0,10),ylim=c(0,10))
rasterImage("moeda_1jogada.png",2,2,4,4)
barplot(4:7)
par(mfrow=c(1,1))
?rasterImage
library(graphics)
par(mfrow=c(1,2))
plot(NA,NA,xlim=c(0,10),ylim=c(0,10))
rasterImage("moeda_1jogada.png",2,2,4,4)
library(graphics)
par(mfrow=c(1,2))
plot(NA,NA,xlim=c(0,10),ylim=c(0,10))
rasterImage("moeda_1jogada.png",2,2,4,4)
barplot(4:7)
par(mfrow=c(1,1))
?rasterImage
library(graphics)
par(mfrow=c(1,2))
plot(NA,NA,xlim=c(0,10),ylim=c(0,10))
rasterImage("moeda_1jogada.png",0,0,10,10)
is.raster("moeda_1jogada.png")
as.raster("moeda_1jogada.png")
img <- as.raster("moeda_1jogada.png")
rasterImage(img,0,0,10,10)
library(graphics)
par(mfrow=c(1,2))
plot(NA,NA,xlim=c(0,10),ylim=c(0,10))
img <- as.raster("moeda_1jogada.png")
library(imager)
plot(boats)
library(ggplot2)
library(png)
library(grid)
library(ggimage)
library(ggimage)
img <- readPNG("moeda_1jogada.png")
img
plot(NA,NA,xlim=c(0,10),ylim=c(0,10))
img <- readPNG("moeda_1jogada.png")
rasterImage(img,0,0,10,10)
par(mfrow=c(2,1))
plot(NA,NA,xlim=c(0,10),ylim=c(0,10), axes=FALSE)
img <- readPNG("moeda_1jogada.png")
rasterImage(img,0,0,10,10)
barplot(4:7)
par(mfrow=c(1,1))
par(mfrow=c(2,1))
plot(NA,NA,xlim=c(0,10),ylim=c(0,10), axes=FALSE)
plot(NA,NA,xlim=c(0,10),ylim=c(0,10)
)
par(mfrow=c(1,2))
plot(NA,NA,xlim=c(0,10),ylim=c(0,10), axes=FALSE)
par(mfrow=c(1,2))
plot(NA,NA,xlim=c(0,10),ylim=c(0,10),
xlab="", ylab="", axes=FALSE)
img <- readPNG("moeda_1jogada.png")
rasterImage(img,0,0,10,10)
?par
jogadas <- 3
probabilidade <- dbinom(0:jogadas,jogadas,0.5)
sucesso <- 0:jogadas
par(mfrow=c(1,1))
plot(sucesso,probabilidade)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source("friendlycolor.R")
jogadas <- 3
probabilidade <- dbinom(0:jogadas,jogadas,0.5)
sucesso <- 0:jogadas
par(mfrow=c(1,1))
plot(sucesso,probabilidade,type="h", col=friendlycolor(8), lwd=3)
plot(sucesso,probabilidade,type="h", col=friendlycolor(8), lwd=3)
points(sucesso,probabilidade, pch=21, col=friendlycolor(8), bg=friendlycolor(12))jogadas <- 3
source('~/.active-rstudio-document')
?rasterImage
library(ggplot2)
library(png)
library(grid)
library(ggimage)
layout(matrix(1:2,nrow=1),widths=c(1,2))
# imagem das moedas
plot(NA,NA,xlim=c(0,10),ylim=c(0,10),
xlab="", ylab="", axes=FALSE)
img <- readPNG("moeda_2jogadas.png")
rasterImage(img,0,0,10,6.5)
# grafico
source("friendlycolor.R")
jogadas <- 2
probabilidade <- dbinom(0:jogadas,jogadas,0.5)
sucesso <- 0:jogadas
plot(sucesso, probabilidade,
ylim = c(0,max(probabilidade)),
type="h", col=friendlycolor(8), lwd=3)
points(sucesso,probabilidade, pch=21, col=friendlycolor(8),
bg=friendlycolor(12))
par(mfrow=c(1,1))
source("friendlycolor.R")
jogadas <- 5
probabilidade <- dbinom(0:jogadas,jogadas,0.5)
sucesso <- 0:jogadas
plot(sucesso, probabilidade,
ylim = c(0,max(probabilidade)),
type="h", col=friendlycolor(8), lwd=3)
points(sucesso,probabilidade, pch=21, col=friendlycolor(8),
bg=friendlycolor(12))
?library
knitr::opts_chunk$set(echo = TRUE)
total <- sum(dbinom(c(0:4,11:15),jogadas,p.sucesso))
p.sucesso <- 0.5 # *** probabilidade de sucesso ***
jogadas <- 15
total <- sum(dbinom(c(0:4,11:15),jogadas,p.sucesso))
cat("Total = ", total, sep="")
source("friendlycolor.R")
p.sucesso <- 0.5 # *** probabilidade de sucesso ***
jogadas <- 15
sucesso <- 0:jogadas
probabilidade <- dbinom(sucesso,jogadas,p.sucesso)
binomial <- data.frame(sucesso,probabilidade)
names(binomial) <- c("Sucesso", "FR")
# grafico
cauda <- 4 # a partir de onde hachurar
# largura da hachura
hachura <- 500/jogadas
if (hachura < 10) {hachura <- 10}
if (hachura > 35) {hachura <- 35}
plot(binomial$Sucesso,
binomial$FR,
main = paste("Binomial: ",
jogadas, " jogadas, ",
"P[sucesso] = ", p.sucesso,
sep=""),
xlab = "Sucesso",
ylab = "Probabilidade",
ylim = c(0,max(probabilidade)*1.2),
type="h",
col=friendlycolor(8), lwd=3)
points(sucesso,probabilidade, pch=21,
col=friendlycolor(8),
bg=friendlycolor(12))
# cauda esquerda
lines (binomial$Sucesso[binomial$Sucesso<cauda],
binomial$FR[binomial$Sucesso<cauda],
col=paste(friendlycolor(8),"88",sep=""),
lwd=hachura, type="h")
# cauda direita
lines (binomial$Sucesso[binomial$Sucesso>15-cauda],
binomial$FR[binomial$Sucesso>15-cauda],
col=paste(friendlycolor(8),"88",sep=""),
lwd=hachura, type="h")
# areas e labels das áreas
y <- max(binomial$FR[binomial$Sucesso<cauda])*3
x <- cauda-0.5
polygon(x=c(0,x,x,0,0),
y=c(0,0,y,y,0),
col=paste(friendlycolor(30),"88",sep=""))
abline(v=x,lty=2)
x <- 15-cauda+0.5
abline(v=x,lty=2)
text(max(binomial$Sucesso)*1/2,
max(binomial$FR)*1.1,
"não rejeição\nde H0")
x <- mean(binomial$Sucesso[binomial$Sucesso<cauda])
y <- max(binomial$FR[binomial$Sucesso<cauda])*3
text(x, y, "rejeição\nde H0")
text(mean(binomial$Sucesso[binomial$Sucesso>15-cauda]),
max(binomial$FR[binomial$Sucesso>15-cauda])*3,
"rejeição\nde H0")
source('~/ps20200114/MSP1290_2020/Aula 2 - Distribuicoes de probabilidade e teste de hipotese nula/Rmd_distprob_fonte/Goodcoin.R')
source('~/ps20200114/MSP1290_2020/Aula 2 - Distribuicoes de probabilidade e teste de hipotese nula/Rmd_distprob_fonte/Goodcoin.R')
source('~/ps20200114/MSP1290_2020/Aula 2 - Distribuicoes de probabilidade e teste de hipotese nula/Rmd_distprob_fonte/Goodcoin.R')
source('~/ps20200114/MSP1290_2020/Aula 2 - Distribuicoes de probabilidade e teste de hipotese nula/Rmd_distprob_fonte/Goodcoin.R')
?rasterImage
plot(NA,NA,xlim=c(0,10),ylim=c(0,10),
xlab="", ylab="", axes=FALSE)
img <- readPNG("moedas10.png")
library(ggplot2, verbose = FALSE)
library(png)
library(grid)
library(ggimage)
plot(NA,NA,xlim=c(0,10),ylim=c(0,10),
xlab="", ylab="", axes=FALSE)
img <- readPNG("moedas10.png")
rasterImage(img,0,10,1,11)
library(ggplot2, verbose = FALSE)
library(png)
library(grid)
library(ggimage)
plot(NA,NA,xlim=c(0,10),ylim=c(0,10),
xlab="", ylab="")
img <- readPNG("moedas10.png")
rasterImage(img,10,0,11,1)
library(ggplot2, verbose = FALSE)
library(png)
library(grid)
library(ggimage)
plot(NA,NA,xlim=c(0,15),ylim=c(0,10),
xlab="", ylab="", axes=FALSE)
axis(1)
img <- readPNG("moedas10.png")
rasterImage(img,9,0,11,3)
text(5,9,"Resultado: 10 crianças em 15\naprenderam o método.",cex=1.5)
text(10,4,"10",cex=2)
